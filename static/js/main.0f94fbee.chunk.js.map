{"version":3,"sources":["arcade-background.jpeg","AppFunction.js","index.js"],"names":["App","colors","red","yellow","green","useState","scores","Tansu","Ahmet","Ozan","totalScores","max","setScores","setWarningColor","point","style","backgroundImage","img","className","onClick","newObj","JSON","parse","stringify","Math","floor","random","Object","keys","reduce","a","b","rootElement","document","getElementById","ReactDOM","render"],"mappings":"0JAAe,G,KAAA,IAA0B,gD,OCG1B,SAASA,IACtB,IAAMC,EAAS,CAAC,CAAEC,IAAK,UAAWC,OAAQ,UAAWC,MAAO,YAC5D,EAA4BC,mBAAS,CACnCC,OAAQ,CAAEC,MAAO,EAAGC,MAAO,EAAGC,KAAM,GACpCC,YAAa,CAAEH,MAAO,EAAGC,MAAO,EAAGC,KAAM,GACzCE,IAAK,OAHP,mBAAOL,EAAP,KAAeM,EAAf,KAKMC,EAAkB,SAACC,GACvB,OAAIA,GAAS,EACJb,EAAO,GAAGC,IACRY,GAAS,EACXb,EAAO,GAAGE,OAEVF,EAAO,GAAGG,OAyBrB,OACE,qBAAKW,MAAO,CAAEC,gBAAgB,OAAD,OAASC,EAAT,MAAmBC,UAAU,WAA1D,SACE,sBAAKA,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,+BAAKZ,EAAOK,IAAP,UAAgBL,EAAOK,IAAvB,SAAoC,WAAzC,UACA,wCAAWL,EAAOA,OAAOC,SACzB,wCAAWD,EAAOA,OAAOE,SACzB,uCAAUF,EAAOA,OAAOG,QACxB,wBAAQS,UAAU,SAASC,QA9Bd,WACnB,IAAMC,EAASC,KAAKC,MAAMD,KAAKE,UAAUjB,IACzCc,EAAOd,OAAOC,MAAQiB,KAAKC,MAAsB,IAAhBD,KAAKE,UACtCN,EAAOd,OAAOE,MAAQgB,KAAKC,MAAsB,IAAhBD,KAAKE,UACtCN,EAAOd,OAAOG,KAAOe,KAAKC,MAAsB,IAAhBD,KAAKE,UACrCN,EAAOT,IAAMgB,OAAOC,KAAKR,EAAOd,QAAQuB,QAAO,SAACC,EAAGC,GAAJ,OAC7CX,EAAOd,OAAOwB,KAAOV,EAAOd,OAAOyB,GAC/B,SACAX,EAAOd,OAAOwB,GAAKV,EAAOd,OAAOyB,GACjCD,EACAC,KAGa,UAAfX,EAAOT,IACTS,EAAOV,YAAYH,QACK,UAAfa,EAAOT,IAChBS,EAAOV,YAAYF,QACK,SAAfY,EAAOT,KAChBS,EAAOV,YAAYD,OAErBG,EAAUQ,IAUJ,qBAIF,2BAAUF,UAAU,YAApB,UACE,kDACA,kCACE,+BACE,uCACA,uCACA,yCAEF,+BACE,oBACEH,MAAO,CACL,mBAAmB,GAAnB,OAAuBF,EACrBP,EAAOI,YAAYH,SAHzB,SAOGD,EAAOI,YAAYH,QAEtB,oBACEQ,MAAO,CACL,mBAAmB,GAAnB,OAAuBF,EACrBP,EAAOI,YAAYF,SAHzB,SAOGF,EAAOI,YAAYF,QAEtB,oBACEO,MAAO,CACL,mBAAmB,GAAnB,OAAuBF,EACrBP,EAAOI,YAAYD,QAHzB,SAOGH,EAAOI,YAAYD,qBClFpC,IAAMuB,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACpC,EAAD,MAEFgC,I","file":"static/js/main.0f94fbee.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/arcade-background.9fadf270.jpeg\";","import \"./styles.css\";\r\nimport { useState } from \"react\";\r\nimport img from \"./arcade-background.jpeg\";\r\nexport default function App() {\r\n  const colors = [{ red: \"#FF0000\", yellow: \"#ffcc00\", green: \"#339900\" }];\r\n  const [scores, setScores] = useState({\r\n    scores: { Tansu: 0, Ahmet: 0, Ozan: 0 },\r\n    totalScores: { Tansu: 0, Ahmet: 0, Ozan: 0 },\r\n    max: null\r\n  });\r\n  const setWarningColor = (point) => {\r\n    if (point <= 1) {\r\n      return colors[0].red;\r\n    } else if (point <= 2) {\r\n      return colors[0].yellow;\r\n    } else {\r\n      return colors[0].green;\r\n    }\r\n  };\r\n  const handleScores = () => {\r\n    const newObj = JSON.parse(JSON.stringify(scores));\r\n    newObj.scores.Tansu = Math.floor(Math.random() * 100);\r\n    newObj.scores.Ahmet = Math.floor(Math.random() * 100);\r\n    newObj.scores.Ozan = Math.floor(Math.random() * 100);\r\n    newObj.max = Object.keys(newObj.scores).reduce((a, b) =>\r\n      newObj.scores[a] === newObj.scores[b]\r\n        ? \"nobody\"\r\n        : newObj.scores[a] > newObj.scores[b]\r\n        ? a\r\n        : b\r\n    );\r\n    // the following conditions set the total score\r\n    if (newObj.max === \"Tansu\") {\r\n      newObj.totalScores.Tansu++;\r\n    } else if (newObj.max === \"Ahmet\") {\r\n      newObj.totalScores.Ahmet++;\r\n    } else if (newObj.max === \"Ozan\") {\r\n      newObj.totalScores.Ozan++;\r\n    }\r\n    setScores(newObj);\r\n  };\r\n  return (\r\n    <div style={{ backgroundImage: `url(${img})` }} className=\"main-div\">\r\n      <div className=\"flex-div\">\r\n        <div className=\"round-scores-div\">\r\n          <h1>{scores.max ? `${scores.max} wins` : \"LET'S GO\"} !!!</h1>\r\n          <p>Tansu: {scores.scores.Tansu}</p>\r\n          <p>Ahmet: {scores.scores.Ahmet}</p>\r\n          <p>Ozan: {scores.scores.Ozan}</p>\r\n          <button className=\"button\" onClick={handleScores}>\r\n            Play\r\n          </button>\r\n        </div>\r\n        <fieldset className=\"table-div\">\r\n          <legend>TOTAL SCORES</legend>\r\n          <table>\r\n            <tr>\r\n              <td>Tansu</td>\r\n              <td>Ahmet</td>\r\n              <td>Ozan</td>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                style={{\r\n                  \"background-color\": `${setWarningColor(\r\n                    scores.totalScores.Tansu\r\n                  )}`\r\n                }}\r\n              >\r\n                {scores.totalScores.Tansu}\r\n              </td>\r\n              <td\r\n                style={{\r\n                  \"background-color\": `${setWarningColor(\r\n                    scores.totalScores.Ahmet\r\n                  )}`\r\n                }}\r\n              >\r\n                {scores.totalScores.Ahmet}\r\n              </td>\r\n              <td\r\n                style={{\r\n                  \"background-color\": `${setWarningColor(\r\n                    scores.totalScores.Ozan\r\n                  )}`\r\n                }}\r\n              >\r\n                {scores.totalScores.Ozan}\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        </fieldset>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./AppFunction\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}